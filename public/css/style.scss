/** @format */



/*  Imports
 *  ─────────────────────────────────── */

 @import "https://unpkg.com/open-props";
@import "https://unpkg.com/@picocss/pico";
@import "_octo-overrides";



/*  variables
 *  ─────────────────────────────────── */

$task-bg-active        : var(--gray-5);
$task-bg-dimmed        : transparent;
$task-text             : var(--gray-9);
$task-name-editing-bg  : var(--gray-3);
$task-completed-text   : var(--gray-8);



/*  themes (settings page)
 *  ─────────────────────────────────── */
/*
    https://yeun.github.io/open-color/

    * see the repetition in the code?
    find the pattern, and then use sass 
    functions to create these on the 
    fly using color names from open-color
*/

[data-theme="grape"] {
  --primary: var(--grape-5);
  --primary-hover: var(--grape-4);
  --primary-focus: transparentize(var(--grape-5), 0.25);
  --primary-inverse: findColorInverse(var(--primary));
}
[data-theme="green"] {
  --primary: var(--green-5);
  --primary-hover: var(--green-4);
  --primary-focus: transparentize(var(--green-5), 0.25);
  --primary-inverse: findColorInverse(var(--primary));
}



/*  styles
 *  ─────────────────────────────────── */
//@todo these need reafactored

.task {
  .buttons .save {
    display: none;
  }
  
  .content, .completed {
    padding: 0.5rem;
    flex-grow: 1;

    @include animate;
  }

  .buttons {
    height: 100%;
  }
  .button {
    height: 100%;
    cursor: pointer;

    .icon {
      pointer-events: none;
    }
  }
} 

.task.todo-editing {

  .save {
    display: block;
  }
  
  .edit {
    display: none;
  }
  
  .task-name {
    cursor: text;
    background-color: $task-name-editing-bg;
  }
} 

.task.todo-completed {
  order: -1;
  background: $task-bg-dimmed;
  color: $task-completed-text;

  .edit {
    display: none;
  }

  .task-name {
    position: relative;

    // line crossing out entire todo entry
    &:after {
      content: '';
      display: block;
      position: absolute;
      width: 100%;
      height: 2px;
      border-radius: 999px;
      top: 50%;
      transform: translateY(-50%);
      background: $task-completed-text;
    }
  }
}


// g-signin button
#customBtn {
  display: inline-block;
  background: var(--gray-3);
  color: var(--gray-8);
  border-radius: 5px;
  border: thin solid var(--gray-8);
  box-shadow: var(--inset-shadow-2);
  white-space: nowrap;

  cursor: pointer;
}

.label {
  font-family: serif;
  font-weight: normal;
}
.goog-icon {
  background: url('../assets/google.png') transparent 5px 50% no-repeat;
  display: inline-block;
  vertical-align: middle;
  width: 42px;
  height: 42px;
}
.buttonText {
  display: inline-block;
  vertical-align: middle;
  padding-left: 42px;
  padding-right: 42px;
  font-size: 14px;
  font-weight: bold;
  /* Use the Roboto font that is loaded in the <head> */
  font-family: 'Roboto', sans-serif;
}
/* g button end */


.task {
  padding: 0.5rem;
  
  background: $task-bg-active;
  color: $task-text;
  margin: 0.25rem;
  border-radius: 10px;
  
  
  display: grid;
  
  grid-template-areas: "name buttons";
  grid-template-columns: auto min-content;
  
  > * {
      white-space: nowrap;
      padding: 0.5rem;
  }

  .buttons {
    grid-area: buttons;
    display: flex;

    .button {
      padding: 0.25rem;
      margin: 0 0.25rem;
    }
  }
  
  .task-name {
      grid-area: name;
      font-weight: bold;
      display: flex;
      align-items: center;
      border-radius: 5px;

      @include animate;
  }
  
  .task-description {
      font-style: italic;
      grid-area: desc;
  }
  
  .brackets {
      grid-area: brackets;
      display: flex;
      
      font-family: monospace;
      
      > * {
          &:before {
              content: "[";
          }

          &:after {
              content: "]";
          }
      }
  }
}


.list {
  display: flex;
  flex-direction: column-reverse;
}