@import "_funcs";



/*  animate
 *  ─────────────────────────────────── */
// @todo use open-props animate bits here

@mixin animate-slow {
  transition: all 0.45s ease-in-out;
}
@mixin animate {
  transition: all 0.25s ease-in-out;
}
@mixin animate-fast {
  transition: all 0.15s ease-in-out;
}



/*  MDL shadows
 *  ─────────────────────────────────── */

$shadow-none        : inset 0 0 0 rgba(0,0,0,0),          inset 0 0 0 rgba(0,0,0,0),          0 0 0 rgba(0,0,0,0),          0 0 0 rgba(0,0,0,0);

$shadow-border      : inset 0 0 0 rgba(10,10,10,.1),      0 0 0 0 rgba(10,10,10,.1),          0 2px 3px rgba(10,10,10,.1),  0 0 0 1px rgba(10,10,10,.1);
$shadow-1           : inset 0 0 0 rgba(0,0,0,0.12),       inset 0 0 0 rgba(0,0,0,0.24),       0 1px 3px rgba(0,0,0,0.12),   0 1px 2px rgba(0,0,0,0.24);
$shadow-2           : inset 0 0 0 rgba(0,0,0,0.16),       inset 0 0 0 rgba(0,0,0,0.23),       0 3px 6px rgba(0,0,0,0.16),   0 3px 6px rgba(0,0,0,0.23);
$shadow-3           : inset 0 0 0 rgba(0,0,0,0.19),       inset 0 0 0 rgba(0,0,0,0.23),       0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
$shadow-4           : inset 0 0 0 rgba(0,0,0,0.25),       inset 0 0 0 rgba(0,0,0,0.22),       0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
$shadow-5           : inset 0 0 0 rgba(0,0,0,0.30),       inset 0 0 0 rgba(0,0,0,0.22),       0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);

$inset-shadow-border: inset 0 2px 3px rgba(10,10,10,.1),  inset 0 0 0 1px rgba(10,10,10,.1),  0 0 0 rgba(10,10,10,.1),      0 0 0 0 rgba(10,10,10,.1);
$inset-shadow-1     : inset 0 1px 3px rgba(0,0,0,0.12),   inset 0 1px 2px rgba(0,0,0,0.24),   0 0 0 rgba(0,0,0,0.12),       0 0 0 rgba(0,0,0,0.24);
$inset-shadow-2     : inset 0 3px 6px rgba(0,0,0,0.16),   inset 0 3px 6px rgba(0,0,0,0.23),   0 0 0 rgba(0,0,0,0.16),       0 0 0 rgba(0,0,0,0.23);
$inset-shadow-3     : inset 0 10px 20px rgba(0,0,0,0.19), inset 0 6px 6px rgba(0,0,0,0.23),   0 0 0 rgba(0,0,0,0.19),       0 0 0 rgba(0,0,0,0.23);
$inset-shadow-4     : inset 0 14px 28px rgba(0,0,0,0.25), inset 0 10px 10px rgba(0,0,0,0.22), 0 0 0 rgba(0,0,0,0.25),       0 0 0 rgba(0,0,0,0.22);
$inset-shadow-5     : inset 0 19px 38px rgba(0,0,0,0.30), inset 0 15px 12px rgba(0,0,0,0.22), 0 0 0 rgba(0,0,0,0.30),       0 0 0 rgba(0,0,0,0.22);

:root {
--shadow-none: $shadow-none; 

--shadow-border: #{$shadow-border};
--shadow-1     : #{$shadow-1};
--shadow-2     : #{$shadow-2};
--shadow-3     : #{$shadow-3};
--shadow-4     : #{$shadow-4};
--shadow-5     : #{$shadow-5};

--inset-shadow-border: #{$inset-shadow-border};
--inset-shadow-1     : #{$inset-shadow-1};
--inset-shadow-2     : #{$inset-shadow-2};
--inset-shadow-3     : #{$inset-shadow-3};
--inset-shadow-4     : #{$inset-shadow-4};
--inset-shadow-5     : #{$inset-shadow-5};
}



/*  nerdfont icons
 *  ─────────────────────────────────── */

@import "_nf";

.icon i[class^="nf-"] {
  @include animate;
}



/*  breakpoints
 *  ─────────────────────────────────── */
// @todo check out open-props breakpoints and incorporate here

$breakpoints: (
  'small'       : ('min': 1px,    'max': 600px),
  'medium'      : ('min': 601px,  'max': 999px),
  'large'       : ('min': 1200px, 'max': 9999px),
  'medium-up'   : ('min': 601px,  'max': 9999px),
  'small-medium': ('min': 1px,    'max': 999px)
) !default;

/// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get(map-get($breakpoints, $breakpoint), 'min')) and (max-width: map-get(map-get($breakpoints, $breakpoint), 'max')) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
